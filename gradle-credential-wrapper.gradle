buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'net.researchgate:gradle-release:2.6.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8+'
    }
}

import com.chesapeaketechnology.wrapper.WrapperDownloadTask
apply plugin: 'net.researchgate.release'
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group 'com.chesapeaketechnology.wrapper'

repositories {
    mavenCentral()
}

release {
    failOnPublishNeeded = false
    git {
        requireBranch = 'release'
    }
}

dependencies {
    localGroovy()
}

ext {
    // The version of gradle to download should match our version
    gradleVersion = project.version.minus("-SNAPSHOT")
    artifactName = "gradle-credential"
}

configurations {
    credentialWrapper
}

build.dependsOn('createCredentialWrapper')

task downloadTask (type: WrapperDownloadTask) {
    description 'This task downloads the gradle wrapper version specified by gradleVersion.'
    gradleVersion = project.gradleVersion.toString()
    destinationDir = file("$buildDir/gradle-downloads")
}

task createCredentialWrapper (type: Zip, dependsOn: downloadTask) {
    description 'Download gradle wrapper and add custom init file to distribution'

    baseName = artifactName
    classifier = 'bin'

    from zipTree(downloadTask.destinationFile)
    into("${downloadTask.distributionNameBase}") {
        into('init.d') {
            from "src/scripts/init.d"
        }
    }
}

/////////////////////////////////////
// Publishing
/////////////////////////////////////

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
        }
    }
    developers {
        developer {
            name "Chesapeake Technology"
            email "devops@ctic-inc.com"
            organization "Chesapeake Technology International"
            organizationUrl "https://github.com/chesapeaketechnology"
        }
    }

    scm {
        connection "scm:git:git://github.com/chesapeaketechnology/gradle-credential-wrapper.git"
        developerConnection "scm:git:git://github.com/chesapeaketechnology/gradle-credential-wrapper.git"
        url "https://github.com/chesapeaketechnology/gradle-credential-wrapper/tree/master"
    }
}

publishing {
    publications {
        WrapperPublication(MavenPublication) {
            artifact createCredentialWrapper
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'A custom gradle wrapper that applies the gradle-credentials-plugin via ' +
                        'an init script so credentials can be used in a build')
                root.appendNode('name', 'gradle-credential-wrapper')
                root.appendNode('url', 'https://github.com/chesapeaketechnology/gradle-credential-wrapper')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    def repoName = project.hasProperty('bintrayRepoName') ? project.property('bintrayRepoName') : System.getenv('BINTRAY_REPO_NAME')
    publications = ['WrapperPublication']
    pkg {
        repo = repoName
        name = 'gradle-credential-wrapper'
        userOrg = user
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/chesapeaketechnology/gradle-credential-wrapper.git'
        labels = ['gradle', 'credentials', 'wrapper', 'encrypted', 'login', 'private repository']
        publicDownloadNumbers = true
        attributes= ['a': ['ay1', 'ay2'], 'b': ['bee'], c: 'cee'] //Optional package-level attributes
        version {
            name = project.version
            desc = 'Gradle Credential Wrapper'
            released  = new Date()
            vcsTag = project.version
        }
    }
}